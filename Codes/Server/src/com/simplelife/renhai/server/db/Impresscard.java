package com.simplelife.renhai.server.db;

import java.util.Collection;
import java.util.Set;
import java.util.concurrent.ConcurrentLinkedQueue;
import java.util.concurrent.ConcurrentSkipListSet;

import org.apache.ibatis.session.SqlSession;
import org.slf4j.Logger;

import com.simplelife.renhai.server.util.IDbObject;

public class Impresscard implements IDbObject 
{
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column impresscard.impressCardId
     *
     * @mbggenerated Fri Nov 01 15:18:11 CST 2013
     */
    private Integer impressCardId;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column impresscard.profileId
     *
     * @mbggenerated Fri Nov 01 15:18:11 CST 2013
     */
    private Integer profileId;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column impresscard.chatTotalCount
     *
     * @mbggenerated Fri Nov 01 15:18:11 CST 2013
     */
    private Integer chatTotalCount;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column impresscard.chatTotalDuration
     *
     * @mbggenerated Fri Nov 01 15:18:11 CST 2013
     */
    private Integer chatTotalDuration;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column impresscard.chatLossCount
     *
     * @mbggenerated Fri Nov 01 15:18:11 CST 2013
     */
    private Integer chatLossCount;

    /**
     * This method was generated by MyBatis Generator.
     * This method returns the value of the database column impresscard.impressCardId
     *
     * @return the value of impresscard.impressCardId
     *
     * @mbggenerated Fri Nov 01 15:18:11 CST 2013
     */
    public Integer getImpressCardId() {
        return impressCardId;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method sets the value of the database column impresscard.impressCardId
     *
     * @param impressCardId the value for impresscard.impressCardId
     *
     * @mbggenerated Fri Nov 01 15:18:11 CST 2013
     */
    public void setImpressCardId(Integer impressCardId) {
        this.impressCardId = impressCardId;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method returns the value of the database column impresscard.profileId
     *
     * @return the value of impresscard.profileId
     *
     * @mbggenerated Fri Nov 01 15:18:11 CST 2013
     */
    public Integer getProfileId() {
        return profileId;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method sets the value of the database column impresscard.profileId
     *
     * @param profileId the value for impresscard.profileId
     *
     * @mbggenerated Fri Nov 01 15:18:11 CST 2013
     */
    public void setProfileId(Integer profileId) {
        this.profileId = profileId;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method returns the value of the database column impresscard.chatTotalCount
     *
     * @return the value of impresscard.chatTotalCount
     *
     * @mbggenerated Fri Nov 01 15:18:11 CST 2013
     */
    public Integer getChatTotalCount() {
        return chatTotalCount;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method sets the value of the database column impresscard.chatTotalCount
     *
     * @param chatTotalCount the value for impresscard.chatTotalCount
     *
     * @mbggenerated Fri Nov 01 15:18:11 CST 2013
     */
    public void setChatTotalCount(Integer chatTotalCount) {
        this.chatTotalCount = chatTotalCount;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method returns the value of the database column impresscard.chatTotalDuration
     *
     * @return the value of impresscard.chatTotalDuration
     *
     * @mbggenerated Fri Nov 01 15:18:11 CST 2013
     */
    public Integer getChatTotalDuration() {
        return chatTotalDuration;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method sets the value of the database column impresscard.chatTotalDuration
     *
     * @param chatTotalDuration the value for impresscard.chatTotalDuration
     *
     * @mbggenerated Fri Nov 01 15:18:11 CST 2013
     */
    public void setChatTotalDuration(Integer chatTotalDuration) {
        this.chatTotalDuration = chatTotalDuration;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method returns the value of the database column impresscard.chatLossCount
     *
     * @return the value of impresscard.chatLossCount
     *
     * @mbggenerated Fri Nov 01 15:18:11 CST 2013
     */
    public Integer getChatLossCount() {
        return chatLossCount;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method sets the value of the database column impresscard.chatLossCount
     *
     * @param chatLossCount the value for impresscard.chatLossCount
     *
     * @mbggenerated Fri Nov 01 15:18:11 CST 2013
     */
    public void setChatLossCount(Integer chatLossCount) {
        this.chatLossCount = chatLossCount;
    }
    
    public void addImpressLabelMap(Impresslabelmap map)
    {
    	if (impressLabelMapSet.contains(map))
    	{
    		return;
    	}
    	impressLabelMapSet.add(map);
    }
    
    public void removeImpressLabelMap(Impresslabelmap map)
    {
    	if (!impressLabelMapSet.contains(map))
    	{
    		logger.warn("The Impresslabelmap <{}> which is requested to be removed is not in current impress card", map.getGlobalLabel().getImpressLabelName());
    		return;
    	}
    	impressLabelMapSet.remove(map);
    }

    public Collection<Impresslabelmap> getImpressLabelMapSet()
	{
		return impressLabelMapSet;
	}

	public void setImpressLabelMapSet(Set<Impresslabelmap> impressLabelMapSet)
	{
		this.impressLabelMapSet = impressLabelMapSet;
	}
	
	@Override
	public void save(SqlSession session)
	{
		ImpresscardMapper mapper = session.getMapper(ImpresscardMapper.class);
		if (this.impressCardId == null)
		{
			mapper.insert(this);
		}
		else
		{
			mapper.updateByPrimaryKey(this);
		}
		
		for (Impresslabelmap map : impressLabelMapSet)
		{
			map.setImpressCardId(impressCardId);
			map.save(session);
		}
	}
	
	private Logger logger = DBModule.instance.getLogger();
	private Collection<Impresslabelmap> impressLabelMapSet = new ConcurrentLinkedQueue<Impresslabelmap>();
}